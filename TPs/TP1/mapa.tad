TAD Mapa 
	Igualdad Observacional:
	Generos: mapa
	Exporta: mapa, observadores, generadores, posicion, conj(α)
	Usa: Bool, Nat, posicion
	
	Observadores Basicos:
		// esVacio: mapa -> bool
		inicio: mapa -> posicion
		final: mapa -> posicion
		fantasmas: mapa -> conj(posicion)
		// pacman: mapa -> posicion
		paredes: mapa -> conj(posicion)
		alto: mapa -> nat
		ancho: mapa -> nat
		
	Generadores:
	
		// nuevoPacman:	inicio -> mapa
		
		// mapaVacio: -> mapa
		// agregarFila: nat -> mapa
		
		//PREGUNTAR SI mapa VACIO ESTÁ BIEN.
		
		mapaVacio: nat a × nat b × posicion i × posicion f -> mapa  {¬(i = f) ∧ π1(i) <= a ∧ π2(i) <= b ∧ π1(f) <= a ∧ π2(f) <= b)}
		agregarFantasma: posicion p × mapa t -> mapa
												{posicionValida(p) ∧ ¬esPared(p, t) ∧ ¬(p = inicio(t))
												∧ ¬(p = final(t))}
		agregarPared: posicion p × mapa t -> mapa
		                    {posicionValida(p) ∧ ¬esFantasma(p, t) ∧ ¬(p = inicio(t))
												∧ ¬(p = final(t))}
		
		
		
		// agregarPacman:
		
	Otras Operaciones:
		posicionValida: posicion × mapa -> bool
		esPared: posicion × mapa -> bool
		esFantasma: posicion × mapa -> bool
		
	Axiomas:
		// esVacio(mapaVacio(h,w,i,l)) ≡ true
		// esVacio(agregarFantasma(p,t)) ≡ false
		// esVacio(agregarPared(p,t)) ≡ false
		
		inicio(mapaVacio(h,w,i,f)) ≡ i
	  final(mapaVacio(h,w,i,f)) ≡ f
		alto(mapaVacio(h,w,i,f)) ≡ h
		ancho(mapaVacio(h,w,i,f)) ≡ w

		inicio(agregarFantasma(p, t)) ≡ inicio(t)
		inicio(agregarPared(p, t)) ≡ inicio(t)
		
		final(agregarFantasma(p, t)) ≡ final(t)
		final(agregarPared(p, t)) ≡ final(t)
		
		agregarPared(p, agregarFantasma(p, mapaVacio(f))))
		mapaVacio
		
		fantasmas(mapaVacio(h,w,i,l)) ≡ Ø
		fantasmas(agregarFantasma(p,t)) ≡ p ∪ fantasmas(t)
		fantasmas(agregarPared(p,t)) ≡ fantasmas(t)
		
		paredes(mapaVacio(h,w,i,l)) ≡ Ø
		paredes(agregarFantasma(p,t)) ≡ paredes(t)
		paredes(agregarPared(p,t)) ≡ p ∪ paredes(t)
		
		alto(agregarFantasma(p,t)) ≡ alto(t)
		alto(agregarPared(p,t)) ≡ alto(t)
		
		ancho(agregarFantasma(p,t)) ≡ ancho(t)
		ancho(agregarPared(p,t)) ≡ ancho(t)
		
		
		// t = agregarFantasma(p1, mapaVacio)
		// t = mapaVacio
		

		
		
		posicionValida(p, t) 
		
		1 0 1
		# # # 
		# # #
		
Fin TAD

	TAD Posicion es Tupla(Natural x Natural)



[i,1,0,0,0]
[0,0,1,0,0]
[0,f,ll,0,0]


[
 [F,1,0,0],
 [0,0,0,1],
 [0,1,0,0],
 [0,0,0,0],
 [I,1,0,0]    
]
